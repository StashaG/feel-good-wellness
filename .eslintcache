[{"/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/index.js":"1","/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/App.js":"2","/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/reportWebVitals.js":"3","/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/components/Landing.jsx":"4","/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/components/Result.jsx":"5","/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/components/Yoga.jsx":"6","/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/components/Smoothie.jsx":"7","/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/components/Footer.jsx":"8","/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/components/Food.jsx":"9","/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/components/YogaIcon.jsx":"10","/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/redux/store.js":"11","/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/redux/reducers/yoga.js":"12","/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/redux/reducers/food.js":"13","/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/redux/reducers/smoothie.js":"14","/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/redux/reducers/index.js":"15","/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/redux/actionTypes.js":"16","/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/components/YogaCard.jsx":"17","/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/redux/actions.js":"18","/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/components/Navigation.jsx":"19"},{"size":758,"mtime":1608660763338,"results":"20","hashOfConfig":"21"},{"size":1091,"mtime":1608661054086,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1607646467567,"results":"23","hashOfConfig":"21"},{"size":1275,"mtime":1608661019837,"results":"24","hashOfConfig":"21"},{"size":259,"mtime":1607795715969,"results":"25","hashOfConfig":"21"},{"size":4083,"mtime":1608656494606,"results":"26","hashOfConfig":"21"},{"size":1709,"mtime":1608257505782,"results":"27","hashOfConfig":"21"},{"size":290,"mtime":1608256686878,"results":"28","hashOfConfig":"21"},{"size":1205,"mtime":1608292386939,"results":"29","hashOfConfig":"21"},{"size":265,"mtime":1608438276165,"results":"30","hashOfConfig":"21"},{"size":299,"mtime":1608515734789,"results":"31","hashOfConfig":"21"},{"size":817,"mtime":1608615727447,"results":"32","hashOfConfig":"21"},{"size":0,"mtime":1608392803970,"results":"33","hashOfConfig":"21"},{"size":0,"mtime":1608506934180,"results":"34","hashOfConfig":"21"},{"size":112,"mtime":1608506877971,"results":"35","hashOfConfig":"21"},{"size":143,"mtime":1608611394639,"results":"36","hashOfConfig":"21"},{"size":244,"mtime":1608571412254,"results":"37","hashOfConfig":"21"},{"size":630,"mtime":1608615586904,"results":"38","hashOfConfig":"21"},{"size":567,"mtime":1608661033937,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"bjihm5",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/index.js",[],["87","88"],"/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/App.js",[],"/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/reportWebVitals.js",[],"/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/components/Landing.jsx",[],"/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/components/Result.jsx",[],"/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/components/Yoga.jsx",["89","90","91","92","93","94","95"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Jumbotron } from \"react-bootstrap\";\nimport Container from \"react-bootstrap/Container\";\n// import Card from \"react-bootstrap/Card\";\nimport OAuth from \"oauth\";\n// import YogaCard from \"./YogaCard\";\n// import { IoIosHeartEmpty } from \"react-icons/io\";\nimport { doAddToFavorites } from \"../redux/actions\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst API_SECRET = process.env.REACT_APP_API_SECRET;\nconst oauth = new OAuth.OAuth(\n  \"http://api.thenounproject.com\",\n  \"http://api.thenounproject.com\",\n  API_KEY,\n  API_SECRET,\n  \"1.0\",\n  null,\n  \"HMAC-SHA1\"\n);\n\nconst Yoga = (props) => {\n  const [yogaData, setYogaData] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [yogaPoses, setYogaPoses] = useState([]);\n  const [selectValue, setSelectValue] = useState(\"\");\n  // const [favorites, setFavorites] = useState([]);\n  \n  const favorites = {\n    name: \"name of the pose\",\n    image: \"url of the pose\",\n    isFavorite: false,\n  };\n\n  useEffect(() => {\n    oauth.get(\n      \"https://api.thenounproject.com/collection/yoga-pose-set-1/icons\",\n      null,\n      null,\n      function (e, data, res) {\n        if (e) console.error(e);\n        const yd = JSON.parse(data);\n        console.log(props);\n        const yogaItems = [];\n        // Get access to the store from this component\n        // mark the yogaItems as favorite (true/false)\n        for (let i = 0; i < 10; i++) {\n            // const isFavorite = search favorites for this index (i)\n            // if you find it, then isFavorite is true\n            yogaItems.push({\n                id: i,\n                name: yd.icons[i].term,\n                image: yd.icons[i].preview_url,\n                isFavorite: false, \n            });\n        }\n        setYogaData(yogaItems);\n        setIsLoading(false);\n      }\n    );\n  }, []);\n  const handleSelectChange = (e) => {\n//     console.log(e.value);\n  };\n\n  return (\n    // const yoga = this.state.isReady ? this.state.yoga.map( url => <)\n    <div className=\"container\">\n      <Jumbotron fluid>\n        <Container>\n          <h1 className=\"title-heading\">Yoga</h1>\n          <br />\n          <p className=\"pose-description\">\n            Cobra pose is a floor pose which gently stretches and flexes the body. \n            Its head-up position is reminiscent of a cobra rising up off the ground. \n            It brings flexibility and strength.  Cat Pose, or Marjaryasana, is one of the most commonly recognized yoga poses. \n          The shape of the body resembles a stretching, arching cat. This pose is usually \n          done as a partner to Cow Pose, as Cat Pose has the back high while Cow Pose has the back low.\n          </p>\n          <h4>\n            Listed below are great yoga poses you could try at home. Select one of the poses to add \n            to a favorites list to try at home. \n          </h4>\n        </Container>\n      </Jumbotron>\n      <div className=\"main-content\">\n        {!isLoading &&\n          yogaData.map((yoga, id) =>\n            <div key={id}>\n              <h1>{yoga.name}</h1>\n              <img src={yoga.image} />\n              <button\n                onClick={()=>{\nconsole.log(favorites);\n\n// const favoritesId = favorites.find(element => element === id)\n// console.log(favoritesId);\n                    if (false) {\n                      // IF it is a favorite, remove\n                    } else {\n                      // ELSE add to favorites\n                      props.doAddToFavorites(id)\n                    }\n                } }\n              >Add to Favorites</button>\n            </div>\n          )\n        }\n      </div>\n      <div className=\"yoga-poses\">\n        {/* {yogaPoses.map(yogaPose => <li>{yogaPose}</li>)} */}\n      </div>\n    </div>\n  );\n};\nconst mapDispatchToProps = dispatch => ({\n    doAddToFavorites: (id) => dispatch(doAddToFavorites(id))\n});\nconst mapStateToProps = state => ({\n  favorites: state.favorites\n\n\n});\n\nexport default connect (mapStateToProps, mapDispatchToProps)(Yoga);\n","/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/components/Smoothie.jsx",[],"/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/components/Footer.jsx",[],["96","97"],"/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/components/Food.jsx",[],"/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/components/YogaIcon.jsx",[],["98","99"],"/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/redux/store.js",[],"/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/redux/reducers/yoga.js",["100","101"],"import { ADD_FAVORITE } from \"../actionTypes\";\nimport { REMOVE_FAVORITE } from \"../actionTypes\";\nimport { CLEAR_FAVORITE } from \"../actionTypes\";\n\n\nconst initialState = {\n  favorites: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type){\n    case ADD_FAVORITE: \n      return {\n        ...state,\n        favorites: state.favorites + action.payload,\n      }\n    case REMOVE_FAVORITE:\n      return {\n        ...state.slice(0, action.index),\n        ...state.slice(action.index + 1)\n\n      }\n      case CLEAR_FAVORITE:\n      return state.map((index) => {\n        if (index === action.index) {\n          return {\n            ...state,\n            favorites: state.favorites + action.payload\n          }\n        }\n        return\n      })\n      default: \n        return state;\n    }\n  }\n\n\n\n\n","/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/redux/reducers/food.js",[],["102","103"],"/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/redux/reducers/smoothie.js",[],"/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/redux/reducers/index.js",[],"/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/redux/actionTypes.js",[],"/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/components/YogaCard.jsx",["104"],"import React from 'react';\n\nconst YogaCard = (poseInfo)=> {\n    return(\n        <div>\n            <h1>{poseInfo.poseInfo.term}</h1>\n            <img src={poseInfo.poseInfo.preview_url}/>\n        </div>\n        \n    );\n}\nexport default YogaCard;",["105","106"],"/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/redux/actions.js",["107"],"import {\n    ADD_FAVORITE, \n    REMOVE_FAVORITE, \n    CLEAR_FAVORITE\n} from\"./actionTypes\";\n\n\n export const addFavorite = index => {\n    return {\n        type: ADD_FAVORITE,\n        payload: index \n    }\n };\n\n export const removeFavorite = index => {\n    return {\n        type: REMOVE_FAVORITE,\n        payload: index,\n\n            favorite: {\n\n                name: \"name of the pose\",\n                image: \"url of the pose\",\n                isFavorite: false\n            }\n        }\n    }\n \n\n export const doAddToFavorites = (id) => dispatch => {\n     dispatch ({\n         type: ADD_FAVORITE, \n         payload: id\n     })\n };","/Users/stashag/DigitalCrafts/react-repos/feel-good-wellness/src/components/Navigation.jsx",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":26,"column":10,"nodeType":"114","messageId":"115","endLine":26,"endColumn":19},{"ruleId":"112","severity":1,"message":"116","line":26,"column":21,"nodeType":"114","messageId":"115","endLine":26,"endColumn":33},{"ruleId":"112","severity":1,"message":"117","line":27,"column":10,"nodeType":"114","messageId":"115","endLine":27,"endColumn":21},{"ruleId":"112","severity":1,"message":"118","line":27,"column":23,"nodeType":"114","messageId":"115","endLine":27,"endColumn":37},{"ruleId":"119","severity":1,"message":"120","line":62,"column":6,"nodeType":"121","endLine":62,"endColumn":8,"suggestions":"122"},{"ruleId":"112","severity":1,"message":"123","line":63,"column":9,"nodeType":"114","messageId":"115","endLine":63,"endColumn":27},{"ruleId":"124","severity":1,"message":"125","line":92,"column":15,"nodeType":"126","endLine":92,"endColumn":39},{"ruleId":"108","replacedBy":"127"},{"ruleId":"110","replacedBy":"128"},{"ruleId":"108","replacedBy":"129"},{"ruleId":"110","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":10,"column":1,"nodeType":"133","endLine":36,"endColumn":4},{"ruleId":"134","severity":1,"message":"135","line":31,"column":9,"nodeType":"136","messageId":"137","endLine":31,"endColumn":15},{"ruleId":"108","replacedBy":"138"},{"ruleId":"110","replacedBy":"139"},{"ruleId":"124","severity":1,"message":"125","line":7,"column":13,"nodeType":"126","endLine":7,"endColumn":55},{"ruleId":"108","replacedBy":"140"},{"ruleId":"110","replacedBy":"141"},{"ruleId":"112","severity":1,"message":"142","line":4,"column":5,"nodeType":"114","messageId":"115","endLine":4,"endColumn":19},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'yogaPoses' is assigned a value but never used.","Identifier","unusedVar","'setYogaPoses' is assigned a value but never used.","'selectValue' is assigned a value but never used.","'setSelectValue' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["145"],"'handleSelectChange' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["143"],["144"],["143"],["144"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue",["143"],["144"],["143"],["144"],"'CLEAR_FAVORITE' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},"Update the dependencies array to be: [props]",{"range":"148","text":"149"},[1910,1912],"[props]"]